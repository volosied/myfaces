{"version":3,"file":"Lang.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./src/main/typescript/Users/werpu2/development/workspace/monadish/src/main/typescript/Es2019Array.ts","webpack:///./src/main/typescript/Users/werpu2/development/workspace/monadish/src/main/typescript/Monad.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/main/typescript/Users/werpu2/development/workspace/monadish/src/main/typescript/Lang.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","/**\n * Extended array\n */\n\n/**\n * Extended array which adds various es 2019 shim functions to the normal array\n * We must remap all array producing functions in order to keep\n * the delegation active, once we are in!\n */\nclass Es2019Array_<T>  extends Array<T>{\n\n    _another: T[];\n\n    constructor(...another: T[]) {\n        super(...another);\n        if((another as any)._another)  {\n            this._another = (another as any)._another;\n        } else {\n            this._another = another;\n        }\n\n        //for testing it definitely runs into this branch because we are on es5 level\n        //if (!(<any>Array.prototype).flatMap) {\n            this.flatMap = (flatMapFun) => this._flatMap(flatMapFun) as any;\n        //}\n        //if (!(<any>Array.prototype).flat) {\n            this.flat = (flatLevel: number = 1) => this._flat(flatLevel);\n        //}\n    }\n\n    map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[] {\n        const ret = Array.prototype.map.call(this._another, callbackfn, thisArg);\n        return new (_Es2019Array as any) (... ret);\n    }\n\n    concat(...items): T[] {\n        const ret = Array.prototype.concat.call(this._another, ...items);\n        return new (_Es2019Array as any)(... ret);\n    }\n\n    reverse(): T[] {\n        const ret = Array.prototype.reverse.call(this._another);\n        return new (_Es2019Array as any)(... ret);\n    }\n\n    slice(start?: number, end?: number): T[] {\n        const ret = Array.prototype.slice.call(this._another, start, end);\n        return new (_Es2019Array as any)(...ret);\n    }\n\n    splice(start: number, deleteCount?: number): T[] {\n        const ret = Array.prototype.splice.call(this._another, start, deleteCount);\n        return new (_Es2019Array as any)(...ret);\n    }\n\n    filter<S extends T>(predicate: (value: T, index: number, array: T[]) => any, thisArg?: any): S[] {\n        const ret = Array.prototype.filter.call(this._another, predicate, thisArg);\n        return new (_Es2019Array as any)(...ret);\n    }\n\n\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue?: T): T {\n        const ret = Array.prototype.reduce.call(this._another, callbackfn, initialValue);\n        return ret;\n    }\n\n    /*reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T {\n        const ret = Array.prototype.reduceRight.call(callbackfn, initialValue);\n        return ret;\n    }*/\n\n    private _flat(flatDepth = 1) {\n        return this._flatResolve(this._another, flatDepth);\n    }\n\n    private _flatResolve(arr, flatDepth = 1) {\n        //recursion break\n        if (flatDepth == 0) {\n            return arr;\n        }\n        let res = [];\n\n        let reFlat = item => {\n            item = Array.isArray(item) ? item : [item];\n            let mapped = this._flatResolve(item, flatDepth - 1);\n            res = res.concat(mapped);\n        };\n        arr.forEach(reFlat)\n\n        return new Es2019Array(...res);\n    }\n\n    private _flatMap(mapperFunction: Function): any {\n        let res = this.map(item => mapperFunction(item));\n        return this._flatResolve(res);\n    }\n}\n\n//let _Es2019Array = function<T>(...data: T[]) {};\n\n//let oldProto = Es2019Array.prototype;\n\nexport function _Es2019Array<T>(...data: T[]): Es2019Array_<T> {\n    let ret = new Es2019Array_<T>(...data);\n    let proxied = new Proxy<Es2019Array_<T>>(ret, {\n        get(target: Es2019Array_<unknown>, p: string | symbol, receiver: any): any {\n            if(\"symbol\" == typeof p) {\n\n                return target._another[p];\n            }\n            if(!isNaN(parseInt(p as string))) {\n                return target._another[p];\n            } else {\n                return target[p];\n            }\n        },\n\n        set(target, property, value): boolean {\n            target[property] = value;\n            target._another[property] = value;\n            return true;\n        }\n\n    });\n    return proxied;\n};\n\n/**\n * this is the switch between normal array and our shim\n * the shim is only provided in case the native browser\n * does not yet have flatMap support on arrays\n */\nexport var Es2019Array: any = (Array.prototype.flatMap) ? function<T>(...data: T[]): T[] {\n    // sometimes the typescript compiler produces\n    // an array without flatmap between boundaries (the result produces True for Array.isArray\n    // but has no flatMap function, could be a node issue also or Typescript!\n    // we remap that (could be related to: https://github.com/microsoft/TypeScript/issues/31033\n    // the check and remap fixes the issue which should not exist in the first place\n    return data?.flatMap ? data : _Es2019Array(...data);\n} : _Es2019Array;","/*!\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A module which keeps  basic monad like definitions in place\n * Useful if you need the functions in another library to keep its dependencies down\n */\n\n/*IMonad definitions*/\n\nimport {Lang} from \"./Lang\";\nimport {Es2019Array} from \"./Es2019Array\";\n\n\n/**\n * IFunctor interface,\n * defines an interface which allows to map a functor\n * via a first order function to another functor\n */\nexport interface IFunctor<T> {\n    map<R>(fn: (data: T) => R): IFunctor<R>;\n}\n\n/**\n * IMonad definition, basically a functor with a flatMap implementation, flatMap reduces all nested monads after a\n * function call f into a monad with the nesting level of 1\n *\n * flatmap flats nested Monads into a IMonad of the deepest nested implementation\n */\nexport interface IMonad<T, M extends IMonad<any, any>> extends IFunctor<T> {\n    flatMap<T, M>(f: (T) => M): IMonad<any, any>;\n}\n\n/**\n * a stateful functor which holds a value upn which a\n * function can be applied\n *\n * as value holder of type T\n */\nexport interface IIdentity<T> extends IFunctor<T> {\n    readonly value: T;\n}\n\n\n/**\n *  custom value holder definition, since we are not pure functional\n *  but iterative we have structures which allow the assignment of a value\n *  also not all structures are side - effect free\n */\nexport interface IValueHolder<T> {\n    value: T | Array<T>;\n}\n\n/**\n * Implementation of a monad\n * (Side - effect free), no write allowed directly on the monads\n * value state\n */\nexport class Monad<T> implements IMonad<T, Monad<any>>, IValueHolder<T> {\n    constructor(value: T) {\n        this._value = value;\n    }\n\n    protected _value: T;\n\n    get value(): T {\n        return this._value;\n    }\n\n    map<R>(fn?: (data: T) => R): Monad<R> {\n        if (!fn) {\n            fn = (inVal: any) => <R>inVal;\n        }\n        let result: R = fn(this.value);\n        return new Monad(result);\n    }\n\n    flatMap<R>(fn?: (data: T) => R): Monad<any> {\n        let mapped: Monad<any> = this.map(fn);\n        while (mapped?.value instanceof Monad) {\n            mapped = mapped.value\n        }\n        return mapped;\n    }\n\n}\n\n/**\n * optional implementation, an optional is basically an implementation of a Monad with additional syntactic\n * sugar on top\n * (Side - effect free, since value assignment is not allowed)\n * */\nexport class Optional<T> extends Monad<T> {\n\n    /*default value for absent*/\n    static absent = Optional.fromNullable(null);\n\n    constructor(value: T) {\n        super(value);\n    }\n\n    get value(): T {\n        if (this._value instanceof Monad) {\n            return this._value.flatMap().value\n        }\n        return this._value;\n    }\n\n    static fromNullable<V extends Optional<T>, T>(value?: T): Optional<T> {\n        return <V> new Optional(value);\n    }\n\n    /*syntactic sugar for absent and present checks*/\n    isAbsent(): boolean {\n        return \"undefined\" == typeof this.value || null == this.value;\n    }\n\n    /**\n     * any value present\n     */\n    isPresent(presentRunnable ?: (val ?: Monad<T>) => void): boolean {\n        let absent = this.isAbsent();\n        if (!absent && presentRunnable) {\n            presentRunnable.call(this, this)\n        }\n        return !absent;\n    }\n\n    ifPresentLazy(presentRunnable: (val ?: Monad<T>) => void = () => {\n    }): Monad<T> {\n        this.isPresent.call(this, presentRunnable);\n        return this;\n    }\n\n    orElse(elseValue: any): Optional<any> {\n        if (this.isPresent()) {\n            return this;\n        } else {\n            //shortcut\n            if (elseValue == null) {\n                return Optional.absent;\n            }\n            return this.flatMap(() => elseValue);\n        }\n    }\n\n    /**\n     * lazy, passes a function which then is lazily evaluated\n     * instead of a direct value\n     * @param func\n     */\n    orElseLazy(func: () => any): Optional<any> {\n        if (this.isPresent()) {\n            return this;\n        } else {\n            return this.flatMap(func);\n        }\n    }\n\n    /*\n     * we need to implement it to fulfill the contract, although it is used only internally\n     * all values are flattened when accessed anyway, so there is no need to call this method\n     */\n    flatMap<R>(fn?: (data: T) => R): Optional<any> {\n        let val = super.flatMap(fn);\n        if (!(val instanceof Optional)) {\n            return Optional.fromNullable(val.value);\n        }\n\n        return <Optional<any>>val.flatMap();\n    }\n\n    /*\n     * elvis operation, take care, if you use this you lose typesafety and refactoring\n     * capabilities, unfortunately typescript does not allow to have its own elvis operator\n     * this is some syntactic sugar however which is quite useful*/\n    getIf<R>(...key: string[]): Optional<R> {\n\n        key = this.preprocessKeys(...key);\n\n        let currentPos: Optional<any> = this;\n        for (let cnt = 0; cnt < key.length; cnt++) {\n            let currKey = this.keyVal(key[cnt]);\n            let arrPos = this.arrayIndex(key[cnt]);\n\n            if (currKey === \"\" && arrPos >= 0) {\n                currentPos = this.getClass().fromNullable(!(currentPos.value instanceof Array) ? null : (currentPos.value.length < arrPos ? null : currentPos.value[arrPos]));\n                if (currentPos.isAbsent()) {\n                    return currentPos;\n                }\n                continue;\n            } else if (currKey && arrPos >= 0) {\n                if (currentPos.getIfPresent(currKey).isAbsent()) {\n                    return currentPos;\n                }\n                currentPos = (currentPos.getIfPresent(currKey).value instanceof Array) ? this.getClass().fromNullable(currentPos.getIfPresent(currKey).value[arrPos]) : this.getClass().absent;\n                if (currentPos.isAbsent()) {\n                    return currentPos;\n                }\n                continue;\n\n            } else {\n                currentPos = currentPos.getIfPresent(currKey);\n            }\n            if (currentPos.isAbsent()) {\n                return currentPos;\n            } else if (arrPos > -1) {\n                currentPos = this.getClass().fromNullable(currentPos.value[arrPos]);\n            }\n        }\n        return currentPos;\n    }\n\n    /**\n     * simple match, if the first order function call returns\n     * true then there is a match, if the value is not present\n     * it never matches\n     *\n     * @param fn the first order function performing the match\n     */\n    match(fn: (item: T) => boolean): boolean {\n        if (this.isAbsent()) {\n            return false\n        }\n        return fn(this.value);\n    }\n\n    /**\n     * convenience function to flatmap the internal value\n     * and replace it with a default in case of being absent\n     *\n     * @param defaultVal\n     * @returns {Optional<any>}\n     */\n    get<R>(defaultVal: any = Optional.absent): Optional<R> {\n        if (this.isAbsent()) {\n            return this.getClass().fromNullable(defaultVal).flatMap();\n        }\n\n        return this.getClass().fromNullable(this.value).flatMap();\n    }\n\n    toJson(): string {\n        return JSON.stringify(this.value);\n    }\n\n    /**\n     * helper to override several implementations in a more fluent way\n     * by having a getClass operation we can avoid direct calls into the constructor or\n     * static methods and do not have to implement several methods which rely on the type\n     * of \"this\"\n     * @returns the type of Optional\n     */\n    protected getClass(): any {\n        return Optional;\n    }\n\n    /*helper method for getIf with array access aka <name>[<indexPos>]*/\n    protected arrayIndex(key: string): number {\n        let start = key.indexOf(\"[\");\n        let end = key.indexOf(\"]\");\n        if (start >= 0 && end > 0 && start < end) {\n            return parseInt(key.substring(start + 1, end));\n        } else {\n            return -1;\n        }\n    }\n\n    /*helper method for getIf with array access aka <name>[<indexPos>]*/\n    protected keyVal(key: string): string {\n        let start = key.indexOf(\"[\");\n\n        if (start >= 0) {\n            return key.substring(0, start);\n        } else {\n            return key;\n        }\n    }\n\n    /**\n     * additional syntactic sugar which is not part of the usual optional implementation\n     * but makes life easier, if you want to sacrifice typesafety and refactoring\n     * capabilities in typescript\n     */\n    getIfPresent<R>(key: string): Optional<R> {\n        if (this.isAbsent()) {\n            return this.getClass().absent;\n        }\n        return this.getClass().fromNullable(this.value[key]).flatMap();\n    }\n\n    /**\n     * elvis like typesafe functional save resolver\n     * a typesafe option for getIfPresent\n     *\n     * usage myOptional.resolve(value => value.subAttr.subAttr2).orElseLazy(....)\n     * if this is resolvable without any errors an Optional with the value is returned\n     * if not, then an Optional absent is returned, also if you return Optional absent\n     * it is flatmapped into absent\n     *\n     * @param resolver the resolver function, can throw any arbitrary errors, int  the error case\n     * the resolution goes towards absent\n     */\n    resolve<V>(resolver: (item: T) => V): Optional<V> {\n        if (this.isAbsent()) {\n            return Optional.absent;\n        }\n        try {\n            return Optional.fromNullable(resolver(this.value))\n        } catch (e) {\n            return Optional.absent;\n        }\n    }\n\n\n    protected preprocessKeys(...keys): string[] {\n        return new Es2019Array(...keys)\n            .flatMap(item => {\n                return new Es2019Array(...item.split(/]\\s*\\[/gi))\n                    .map(item => {\n                        item = item.replace(/^\\s+|\\s+$/g, \"\");\n                        if(item.indexOf(\"[\") == -1 && item.indexOf(\"]\") != -1) {\n                            item = \"[\" + item;\n                        }\n                        if(item.indexOf(\"]\") == -1 && item.indexOf(\"[\") != -1) {\n                            item = item + \"]\";\n                        }\n                        return item;\n                    })\n            });\n    }\n}\n\n\n// --------------------- From here onwards we break out the side effect free limits ------------\n\n/**\n * ValueEmbedder is the writeable version\n * of optional, it basically is a wrapper\n * around a construct which has a state\n * and can be written to.\n *\n * For the readonly version see Optional\n */\nexport class ValueEmbedder<T> extends Optional<T> implements IValueHolder<T> {\n\n    /*default value for absent*/\n    static absent = ValueEmbedder.fromNullable(null);\n\n    protected key: string;\n\n    constructor(rootElem: any, valueKey: string = \"value\") {\n        super(rootElem);\n\n        this.key = valueKey;\n    }\n\n    get value(): T {\n        return this._value ? <T>this._value[this.key] : null;\n    }\n\n    set value(newVal: T) {\n        if (!this._value) {\n            return;\n        }\n        this._value[this.key] = newVal\n    }\n\n    orElse(elseValue: any): Optional<any> {\n        let alternative = {};\n        alternative[this.key] = elseValue;\n        return this.isPresent() ? this : new ValueEmbedder(alternative, this.key);\n    }\n\n    orElseLazy(func: () => any): Optional<any> {\n        if (this.isPresent()) {\n            return this;\n        } else {\n            let alternative = {};\n            alternative[this.key] = func();\n            return new ValueEmbedder(alternative, this.key);\n        }\n    }\n\n    /**\n     * helper to override several implementations in a more fluent way\n     * by having a getClass operation we can avoid direct calls into the constructor or\n     * static methods and do not have to implement several methods which rely on the type\n     * of \"this\"\n     * @returns ValueEmbedder\n     */\n    protected getClass(): any {\n        return ValueEmbedder;\n    }\n\n    static fromNullable<V extends Optional<T>,T>(value?: any, valueKey: string = \"value\"): V {\n        return <any> new ValueEmbedder<T>(value, valueKey);\n    }\n\n}\n\n\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*!\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Optional} from \"./Monad\";\nimport {Es2019Array} from \"./Es2019Array\";\n\n/**\n * Lang helpers crossported from the apache myfaces project\n */\nexport module Lang {\n    \n\n    //should be in lang, but for now here to avoid recursive imports, not sure if typescript still has a problem with those\n    /**\n     * helper function to safely resolve anything\n     * this is not an elvis operator, it resolves\n     * a value without exception in a tree and if\n     * it is not resolvable then an optional of\n     * a default value is restored or Optional.empty\n     * if none is given\n     *\n     * usage\n     * <code>\n     *     let var: Optiona<string> = saveResolve(() => a.b.c.d.e, \"foobaz\")\n     * </code>\n     *\n     * @param resolverProducer a lambda which can produce the value\n     * @param defaultValue an optional default value if the producer failes to produce anything\n     * @returns an Optional of the produced value\n     */\n    export function saveResolve<T>(resolverProducer: () => T, defaultValue: T = null): Optional<T> {\n        try {\n            let result = resolverProducer();\n            return Optional.fromNullable(result ?? defaultValue);\n        } catch (e) {\n            return Optional.absent;\n        }\n    }\n\n    /**\n     * lazy resolve... aka the function is called on resolve and a default value also\n     * is a producing function (called only if the original producer does not produce any result)\n     * @param resolverProducer the producer for the resolve\n     * @param defaultValue the default value producer function\n     */\n    export function saveResolveLazy<T>(resolverProducer: () => T, defaultValue: () => T = null): Optional<T> {\n        try {\n            let result = resolverProducer();\n            return Optional.fromNullable(result ?? defaultValue());\n        } catch (e) {\n            return Optional.absent;\n        }\n    }\n\n    /**\n     * String to array function performs a string to array transformation\n     * @param {String} it the string which has to be changed into an array\n     * @param {RegExp} splitter our splitter reglar expression\n     * @return a trimmed array of the splitted string\n     */\n    export function strToArray(it: string, splitter: string | RegExp = /\\./gi): Array<string> {\n\n        let ret = [];\n        it.split(splitter).forEach((element => {\n            ret.push(trim(element));\n        }));\n        return ret;\n    }\n\n    /**\n     * hyperfast trim\n     * http://blog.stevenlevithan.com/archives/faster-trim-javascript\n     * crossported from dojo\n     */\n    export function trim(str: string): string {\n        str = str.replace(/^\\s\\s*/, '');\n        let ws = /\\s/, i = str.length;\n\n        while (ws.test(str.charAt(--i))) {\n            //do nothing\n        }\n        return str.slice(0, i + 1);\n    }\n\n    /**\n     * generic object arrays like dom definitions to array conversion method which\n     * transforms any object to something array like\n     * @param obj\n     * @param offset\n     * @param pack\n     * @returns an array converted from the object\n     */\n    export function objToArray<T>(obj: any, offset: number = 0, pack: Array<T> = []): Array<T> {\n        if ((obj ?? \"__undefined__\") == \"__undefined__\") {\n            return pack ?? null;\n        }\n        //since offset is numeric we cannot use the shortcut due to 0 being false\n        //special condition array delivered no offset no pack\n        if ((<any>obj) instanceof Array && !offset && !pack) return obj;\n\n        return new Es2019Array(...pack.concat(Array.prototype.slice.call(obj, offset)));\n    }\n\n    /**\n     * equalsIgnoreCase, case-insensitive comparison of two strings\n     *\n     * @param source\n     * @param destination\n     */\n    export function equalsIgnoreCase(source?: string, destination?: string): boolean {\n        let finalSource = source ?? \"___no_value__\";\n        let finalDest = destination ?? \"___no_value__\";\n\n        //in any other case we do a strong string comparison\n        return finalSource.toLowerCase() === finalDest.toLowerCase();\n    }\n\n\n    /**\n     * runtime type assertion\n     *\n     * @param probe the probe to be tested for a type\n     * @param theType the type to be tested for\n     */\n    export function assertType(probe: any, theType: any): boolean {\n        return isString(theType) ? typeof probe == theType : probe instanceof theType;\n    }\n\n    /**\n     * Back ported from Dojo\n     * a failsafe string determination method\n     * (since in javascript String != \"\" typeof alone fails!)\n     * @param it {|Object|} the object to be checked for being a string\n     * @return true in case of being a string false otherwise\n     */\n    export function isString(it?: any): boolean {\n        //\tsummary:\n        //\t\tReturn true if it is a String\n        return !!arguments.length && it != null && (typeof it == \"string\" || it instanceof String); // Boolean\n    }\n\n    /**\n     * Back-ported, a failsafe determination code for checking whether an object is a function\n     * @param it the object to check for being a function\n     */\n    export function isFunc(it: any): boolean {\n        return it instanceof Function || typeof it === \"function\";\n    }\n\n    // code from https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    // license https://creativecommons.org/licenses/by-sa/2.5/\n    export function objAssign(target: any, ...theArgs: any) { // .length of function is 2\n        if (target == null) { // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        let to = Object(target);\n        if((<any>Object).assign) {\n            theArgs.forEach(item => (<any>Object).assign(to, item));\n            return to;\n        }\n\n        theArgs.filter(item => item != null).forEach(item => {\n            let nextSource = item;\n            Object.keys(nextSource)\n                .filter(nextKey => Object.prototype.hasOwnProperty.call(nextSource, nextKey))\n                .forEach(nextKey => to[nextKey] = nextSource[nextKey]);\n        });\n        return to;\n    }\n\n\n}\n\n"],"names":["root","factory","exports","module","define","amd","a","i","this","Es2019Array_","Array","constructor","another","super","_another","flatMap","flatMapFun","_flatMap","flat","flatLevel","_flat","map","callbackfn","thisArg","_Es2019Array","prototype","call","concat","items","reverse","slice","start","end","splice","deleteCount","filter","predicate","reduce","initialValue","flatDepth","_flatResolve","arr","res","forEach","item","isArray","mapped","Es2019Array","mapperFunction","data","ret","Proxy","get","target","p","receiver","isNaN","parseInt","set","property","value","Monad","_value","fn","inVal","result","Optional","static","isAbsent","isPresent","presentRunnable","absent","ifPresentLazy","orElse","elseValue","orElseLazy","func","val","fromNullable","getIf","key","preprocessKeys","currentPos","cnt","length","currKey","keyVal","arrPos","arrayIndex","getClass","getIfPresent","match","defaultVal","toJson","JSON","stringify","indexOf","substring","resolve","resolver","e","keys","split","replace","ValueEmbedder","rootElem","valueKey","newVal","alternative","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","obj","prop","hasOwnProperty","r","Symbol","toStringTag","Lang","trim","str","ws","test","charAt","isString","it","arguments","String","saveResolve","resolverProducer","defaultValue","saveResolveLazy","strToArray","splitter","element","push","objToArray","offset","pack","equalsIgnoreCase","source","destination","finalDest","toLowerCase","assertType","probe","theType","isFunc","Function","objAssign","theArgs","TypeError","to","assign","nextSource","nextKey"],"sourceRoot":""}